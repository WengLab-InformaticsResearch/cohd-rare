openapi: 3.0.1
info:
  contact:
    email: cl3720@cumc.columbia.edu
    name: Cong Liu
    url: http://chunhualab.org/
    x-role: responsible developer
  description: "Open Annotation for Rare Diseases (OARD) is a real-world data derived annotations for rare disease related phenotypes.\n\n\n \
  A [Python notebook](https://github.com/WengLab-InformaticsResearch/XXX) demonstrates simple examples of how to use the API. \n\n\n
  OARD was developed based upon [COHD](https://cohd.smart-api.info/ui/70117385218edc9bc01633829011dfcf). It is a collaboration between [Weng Lab](http://people.dbmi.columbia.edu/~chw7007/) at [Columbia DBMI](https://www.dbmi.columbia.edu/), [Wang Lab](https://wglab.org/) at [CHOP](https://www.research.chop.edu/), and the [NCATS Biomedical Data Translator](https://ncats.nih.gov/translator) program (Red Team). \n\n\n 
  This work was supported in part by grants: NCATS OT2TR003434, and NLM/NHGRI R01LM012895.\n"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Open Real-world-based Annotation for Rare Disease (OARD)
  version: 1.0.1
servers:
- url: https://rare.cohd.io/api
externalDocs:
  description: Documentation for COHD
  url: https://cohd.smart-api.info/ui/70117385218edc9bc01633829011dfcf
tags:
- description: OARD metadata
  name: Metadata
- description: Concept search in OARD
  name: Vocabulary
- description: Concepts frequency and co-occurence
  name: Frequencies
- description: Associated concepts
  name: Association
security: []
paths:
  /association/chiSquare:
    get:
      description: "Returns the chi-square statistic and p-value between pairs of\
        \ concepts. Results are returned in descending order of the chi-square statistic.\
        \ Note that due to large sample sizes, the chi-square can become very large.\
        \ \nThe expected frequencies for the chi-square analysis are calculated based\
        \ on the single concept frequencies and assuming independence between concepts.\
        \ P-value is calculated with 1 DOF. \n"
      operationId: chiSquare
      parameters:
      - description: The dataset_id of the dataset to query.
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: Semicolon seperated pseudo OMOP concept ids, e.g., "90012461"
          or "90012461;90003641"
        example: 90012461;90003641
        in: query
        name: concept_id_1
        required: true
        schema:
          type: string
      - description: Semicolon seperated pseudo OMOP concept ids. If this parameter
          is specified, then the chi-square between concept_id_1 and concept_id_2
          is returned. If this parameter is not specified, then a list of chi-squared
          results between concept_id_1 and other concepts is returned.
        example: '90500111'
        in: query
        name: concept_id_2
        required: false
        schema:
          type: string
      - description: An OMOP domain id, e.g., "phenotypes", "diseases" to restrict
          the associated concept (concept_id_2) to. By default, no restriction in
          domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      - description: return N top ranked records. By default return all results
        example: 100
        in: query
        name: top_n
        required: false
        schema:
          type: integer
      - description: whether rank negative association first? By default false.
        example: false
        in: query
        name: ascending
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of concept pairs and chi-squared values.
      summary: Chi-square analysis on pairs of concepts
      tags:
      - Association
  /association/jaccardIndex:
    get:
      description: "Calculates the jaccard index (i.e., correlation) between pairs\
        \ of concepts. Results are returned in descending order of jaccard index.\
        \ \njaccard index = Count_1_and_2 / Count_1_or_2\n"
      operationId: jaccardIndex
      parameters:
      - description: The dataset_id of the dataset to query.
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: Semicolon seperated pseudo OMOP concept ids, e.g., "90012461"
          or "90012461;90003641"
        example: 90012461;90003641
        in: query
        name: concept_id_1
        required: true
        schema:
          type: string
      - description: Semicolon seperated pseudo OMOP concept ids. If this parameter
          is specified, then the chi-square between concept_id_1 and concept_id_2
          is returned. If this parameter is not specified, then a list of chi-squared
          results between concept_id_1 and other concepts is returned.
        example: '90500111'
        in: query
        name: concept_id_2
        required: false
        schema:
          type: string
      - description: An OMOP domain id, e.g., "phenotypes", "diseases" to restrict
          the associated concept (concept_id_2) to. By default, no restriction in
          domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      - description: return N top ranked records. By default return all results
        example: 100
        in: query
        name: top_n
        required: false
        schema:
          type: integer
      - description: whether rank negative association first? By default false.
        example: false
        in: query
        name: ascending
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of paired concepts and jaccard index
      summary: Jaccard index between pairs of concepts
      tags:
      - Association
  /association/obsExpRatio:
    get:
      description: 'Returns the natural logarithm of the ratio between the observed
        count and expected count. Expected count is calculated from the single concept
        frequencies and assuming independence between the concepts. Results are returned
        in descending order of ln_ratio.


        expected_count = Count_1_and_2 * num_patients / (Count_1 * Count_2)


        ln_ratio = ln(expected_count)

        '
      operationId: obsExpRatio
      parameters:
      - description: The dataset_id of the dataset to query.
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: Semicolon seperated pseudo OMOP concept ids, e.g., "90012461"
          or "90012461;90003641"
        example: 90012461;90003641
        in: query
        name: concept_id_1
        required: true
        schema:
          type: string
      - description: Semicolon seperated pseudo OMOP concept ids. If this parameter
          is specified, then the chi-square between concept_id_1 and concept_id_2
          is returned. If this parameter is not specified, then a list of chi-squared
          results between concept_id_1 and other concepts is returned.
        example: '90500111'
        in: query
        name: concept_id_2
        required: false
        schema:
          type: string
      - description: An OMOP domain id, e.g., "phenotypes", "diseases" to restrict
          the associated concept (concept_id_2) to. By default, no restriction in
          domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      - description: return N top ranked records. By default return all results
        example: 100
        in: query
        name: top_n
        required: false
        schema:
          type: integer
      - description: whether rank negative association first? By default false.
        example: false
        in: query
        name: ascending
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of paired concepts and observed-expected frequency
            ratio.
      summary: Observed Count / Expected Count
      tags:
      - Association
  /association/relativeFrequency:
    get:
      description: 'Calculates the relative frequency (i.e., conditional probability)
        between pairs of concepts. Results are returned in descending order of relative
        frequency. Note that due to the randomization of the counts, the calculated
        relative frequencies can exceed the limit of 1.0.


        Relative Frequency = Count_1_and_2 / Count_2

        '
      operationId: relativeFrequency
      parameters:
      - description: The dataset_id of the dataset to query.
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: Semicolon seperated pseudo OMOP concept ids, e.g., "90012461"
          or "90012461;90003641"
        example: 90012461;90003641
        in: query
        name: concept_id_1
        required: true
        schema:
          type: string
      - description: Semicolon seperated pseudo OMOP concept ids. If this parameter
          is specified, then the chi-square between concept_id_1 and concept_id_2
          is returned. If this parameter is not specified, then a list of chi-squared
          results between concept_id_1 and other concepts is returned.
        example: '90500111'
        in: query
        name: concept_id_2
        required: false
        schema:
          type: string
      - description: An OMOP domain id, e.g., "phenotypes", "diseases" to restrict
          the associated concept (concept_id_2) to. By default, no restriction in
          domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      - description: return N top ranked records. By default return all results
        example: 100
        in: query
        name: top_n
        required: false
        schema:
          type: integer
      - description: whether rank negative association first? By default false.
        example: false
        in: query
        name: ascending
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of paired concepts and relative frequency.
      summary: Relative frequency between pairs of concepts
      tags:
      - Association
  /frequencies/mostFrequency:
    get:
      description: Retrieves concepts or pair of concepts with most observed clinical
        frequencies or co-occurrences. Multiple concepts input are not allowed.
      operationId: mostFrequency
      parameters:
      - description: 'The dataset_id of the dataset to query. '
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: A single pseudo OMOP concept id, e.g., "90012461". If not provided
          return most frequent single concepts. If provided, return most frequent
          concept pairs
        example: '90012461'
        in: query
        name: concept_id
        required: false
        schema:
          type: string
      - description: which domain to search for. e.g. "phenotypes" or "diseases".
          By default search all domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      - description: return N top ranked records. By default return all results
        example: 100
        in: query
        name: top_n
        required: false
        schema:
          type: integer
      responses:
        default:
          description: An array of paired concept frequencies.
      summary: Most frequently occurred concepts or pairs of concepts
      tags:
      - Frequencies
  /frequencies/pairedConceptFreq:
    get:
      description: Retrieves observed clinical frequencies of a pair of concepts.  Multiple
        concepts may be requested in a semicolon separated list and return pair-wise
        concepts co-occurrence.
      operationId: pairedConceptFreq
      parameters:
      - description: 'The dataset_id of the dataset to query. '
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: A comma pair of OMOP concept ids, e.g., "90012461;90003641"
        example: 90012461;90003641
        in: query
        name: concept_id_1
        required: true
        schema:
          type: string
      - description: A comma pair of OMOP concept ids, e.g., "192855,2008271"
        example: '90500111'
        in: query
        name: concept_id_2
        required: true
        schema:
          type: string
      responses:
        default:
          description: An array of paired concept frequencies.
      summary: Clinical frequency of a pair of concepts
      tags:
      - Frequencies
  /frequencies/singleConceptFreq:
    get:
      description: Retrieves observed clinical frequencies of individual concepts.
        Multiple concepts may be requested in a semicolon separated list.
      operationId: singleConceptFreq
      parameters:
      - description: 'The dataset_id of the dataset to query. '
        example: 1
        in: query
        name: dataset_id
        required: true
        schema:
          type: integer
      - description: A comma separated list of pseudo OMOP concept ids, e.g., '90012461'
          or '90012461;90003641'
        example: 90012461;90003641
        in: query
        name: concept_id
        required: true
        schema:
          type: string
      responses:
        default:
          description: An array of single concept frequencies.
      summary: Clinical frequency of individual concepts
      tags:
      - Frequencies
  /metadata/datasets:
    get:
      description: Returns a list of datasets, including dataset ID, clinical_site,
        name, and description, etc. A description of each dataset can be found [here](https://github.com/stormliucong/oard-react/blob/master/public/dataset.csv)
      operationId: datasets
      responses:
        default:
          description: An array of dataset descriptions.
      summary: Enumerates the datasets available in OARD
      tags:
      - Metadata
  /metadata/domainCounts:
    get:
      description: Returns a list of domains and the number of concepts in each domain.
      operationId: domainCounts
      parameters:
      - description: 'The dataset_id of the dataset to query. '
        example: 1
        in: query
        name: dataset_id
        required: false
        schema:
          type: integer
      responses:
        default:
          description: An array of domain counts.
      summary: The number of concepts in each domain
      tags:
      - Metadata
  /metadata/domainPairCounts:
    get:
      description: Returns a list of pairs of domains and the number of pairs of concepts
        in each.
      operationId: domainPairCounts
      parameters:
      - description: 'The dataset_id of the dataset to query. '
        example: 1
        in: query
        name: dataset_id
        required: false
        schema:
          type: integer
      - description: which domain to search for. e.g. "phenotypes" or "diseases".
          By default search all domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of domain pair counts.
      summary: The number of pairs of concepts in each pair of domains
      tags:
      - Metadata
  /metadata/patientCounts:
    get:
      description: Returns the number of patients in the dataset.
      operationId: patientCounts
      parameters:
      - description: 'The dataset_id of the dataset to query. '
        example: 1
        in: query
        name: dataset_id
        required: false
        schema:
          type: integer
      responses:
        default:
          description: An array of patient counts.
      summary: The number of patients in the dataset
      tags:
      - Metadata
  /vocabulary/findConceptByAny:
    get:
      description: Returns the concept id, names, codes and domains for the given
        list of strings. It will automatically search all field to return matches
      operationId: findConceptByAny
      parameters:
      - description: A semicolon separated list of string, e.g., "HP:0003498" or "90003498;HP:0003498"
        example: MONDO:0000171;muscular dystrophy; 90003498
        in: query
        name: q
        required: true
        schema:
          type: string
      - description: which domain to search for. e.g. "phenotypes" or "diseases".
          By default search all domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of concepts.
      summary: a smart search by any input.
      tags:
      - Vocabulary
  /vocabulary/findConceptByCode:
    get:
      description: Returns the concept id, names, codes and domains for the given
        list of HPO or MONDO identifiers.
      operationId: findConceptByCode
      parameters:
      - description: A semicolon separated list of HPO or MONDO identifiers, e.g.,
          "HP:0003498" or "MONDO:0000171;HP:0003498"
        example: MONDO:0000171;HP:0003498
        in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        default:
          description: An array of concepts.
      summary: search concepts by name strings
      tags:
      - Vocabulary
  /vocabulary/findConceptById:
    get:
      description: Returns the concept id, names, codes and domains for the given
        list of pseudo OMOP ID.
      operationId: findConceptById
      parameters:
      - description: A semicolon separated list of pseudo OMOP IDs, e.g., "90003502"
          or "90003502;90003498"
        example: 90003502;90003498
        in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        default:
          description: An array of concepts.
      summary: search concepts by name strings
      tags:
      - Vocabulary
  /vocabulary/findConceptByName:
    get:
      description: Returns the concept id, names, codes and domains for the given
        list of names.
      operationId: findConceptByName
      parameters:
      - description: A semicolon separated list of names, e.g., "muscular dystrophy"
          or "muscular dystrophy; short stature"
        example: muscular dystrophy; short stature
        in: query
        name: q
        required: true
        schema:
          type: string
      - description: which domain to search for. e.g. "phenotypes" or "diseases".
          By default search all domains.
        example: phenotypes
        in: query
        name: domain_id
        required: false
        schema:
          type: string
      responses:
        default:
          description: An array of concepts.
      summary: search concepts by name strings
      tags:
      - Vocabulary
